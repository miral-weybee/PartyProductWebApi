// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartyProductWebApi.Models;

#nullable disable

namespace PartyProductWebApi.Migrations
{
    [DbContext(typeof(PartyProductWebApiContext))]
    [Migration("20231219122143_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PartyProductWebApi.Models.AssignParty", b =>
                {
                    b.Property<int>("AssignPartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignPartyId"));

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("AssignPartyId")
                        .HasName("PK_dbo.AssignParties");

                    b.HasIndex("PartyId");

                    b.HasIndex("ProductId");

                    b.ToTable("AssignParties");
                });

            modelBuilder.Entity("PartyProductWebApi.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentRate")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Invoices");

                    b.HasIndex("PartyId");

                    b.HasIndex("ProductId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PartyProductWebApi.Models.Party", b =>
                {
                    b.Property<int>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartyId"));

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartyId")
                        .HasName("PK_dbo.Parties");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("PartyProductWebApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId")
                        .HasName("PK_dbo.Products");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PartyProductWebApi.Models.ProductRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfRate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProductNameProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductName_ProductId");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.ProductRates");

                    b.HasIndex("ProductNameProductId");

                    b.ToTable("ProductRates");
                });

            modelBuilder.Entity("PartyProductWebApi.Models.AssignParty", b =>
                {
                    b.HasOne("PartyProductWebApi.Models.Party", "Party")
                        .WithMany("AssignParties")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.AssignParties_dbo.Parties_Party_PartyId");

                    b.HasOne("PartyProductWebApi.Models.Product", "Product")
                        .WithMany("AssignParties")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.AssignParties_dbo.Products_Product_ProductId");

                    b.Navigation("Party");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PartyProductWebApi.Models.Invoice", b =>
                {
                    b.HasOne("PartyProductWebApi.Models.Party", "Party")
                        .WithMany("Invoices")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Invoices_dbo.Parties_PartyId");

                    b.HasOne("PartyProductWebApi.Models.Product", "Product")
                        .WithMany("Invoices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Invoices_dbo.Products_ProductId");

                    b.Navigation("Party");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PartyProductWebApi.Models.ProductRate", b =>
                {
                    b.HasOne("PartyProductWebApi.Models.Product", "ProductNameProduct")
                        .WithMany("ProductRates")
                        .HasForeignKey("ProductNameProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.ProductRates_dbo.Products_ProductName_ProductId");

                    b.Navigation("ProductNameProduct");
                });

            modelBuilder.Entity("PartyProductWebApi.Models.Party", b =>
                {
                    b.Navigation("AssignParties");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("PartyProductWebApi.Models.Product", b =>
                {
                    b.Navigation("AssignParties");

                    b.Navigation("Invoices");

                    b.Navigation("ProductRates");
                });
#pragma warning restore 612, 618
        }
    }
}
